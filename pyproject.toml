
[project]
name = "pegen"
description = "CPython's PEG parser generator"
readme = "README.md"
requires-python = ">=3.8, <4"
license = {file = "LICENSE"}
authors = [
    {name = "Guido van Rossum"},
    {name = "Pablo Galindo", email = "pablogsal@gmail.com"},
    {name = "Lysandros Nikolaou", email = "lisandrosnik@gmail.com"},
    {name = "studyingegret", email = "a3times7@outlook.com"}
]
maintainers = [
    {name = "Matthieu C. Dartiailh", email = "m.dartiailh@gmail.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Compilers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
]
keywords = ["parser", "CPython", "PEG", "pegen"]
dynamic=["version"]

[project.optional-dependencies]
docs = ["sphinx", "sphinx-copybutton", "furo"]
lint = ["black", "flake8", "mypy"]
test = ["pytest", "pytest-cov"]
memory = ["psutil"]
web = ["flask", "flask-wtf"]

[project.urls]
Homepage = "https://github.com/we-like-parsers/pegen"
Documentation = "https://we-like-parsers.github.io/pegen/"
Source = "https://github.com/we-like-parsers/pegen"
Changelog = "https://github.com/we-like-parsers/pegen/releasenotes.rst"
"Bug reports" = "https://github.com/we-like-parsers/pegen/issues"

[build-system]
requires = ["setuptools>=61.2", "wheel", "setuptools_scm[toml]>=3.4.3"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
# Do not determine package version from non-version tags
git_describe_command = 'git describe --long --match "v[0123456789].*"'

[tool.black]
line-length = 99
target_version = ['py38']
exclude = '''
(
      /pegen/grammar_parser.py            # generated file
    | /tests/python_parser/data/          # test files
    | /tests/python_parser/parser_cache/  # generated parser
)
'''

[tool.pytest.ini_options]
norecursedirs = [
    "data/failset",
    "cpython"
]

[tool.mypy]
#files = ["src/pegen/**/*.py", "scripts/**/*.py", "tests/**/*.py"]
files = ["src/pegen/**/*.py", "scripts/**/*.py"]
mypy_path = ["src/_typings_mypy"]
exclude = [".*_typings_not_mypy.*", "tests/data/.*"]

#follow_imports = "error" #?
follow_imports = "normal"
no_implicit_optional = true
strict_optional = true

disallow_untyped_calls = true
disallow_untyped_defs = true

disallow_any_generics = true
disallow_any_unimported = true
disallow_incomplete_defs = true
disallow_subclassing_any = true

warn_unused_configs = true
#warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true

show_traceback = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["pegen.grammar_parser"]
strict_optional = false

[[tool.mypy.overrides]]
module = ["psutil"]
ignore_missing_imports = true

[tool.pyright]
# Skip analyzing build_types.py, instead refer to _typings_not_mypy/build_typings.py for better hints
exclude = ["src/pegen/build_types.py"]
extraPaths = ["src/_typings_not_mypy"]
